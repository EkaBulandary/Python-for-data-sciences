# -*- coding: utf-8 -*-
"""prediksi-covid19-di-indonesia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AfUYu5i0smTiVWZ6YXkjLX5etrns8sAX

# Prediksi Covid19 di Indonesia menggunakan Model Polynomial Regression

Pada kesempatan ini saya akan menggunakan model Polynomial untuk memperkirakan laju penyebaran Covid19 sampai dengan akhir April 2020. Polynomial Regression membuat sekenario terburuk terhadap laju pertumbuhan Covid19, sekenario terburuk dipilih sebagai langkah agar pemerintah dan kita semua lebih serius untuk bersama sama melawan Covid19 ini.
"""

#start azriel
import pandas as pd #membaca file csv dari dataset
import numpy as np #
import matplotlib.pyplot as plt #memvisualisasikan data covid yg dibaca
import seaborn as sns #bisa dibilang pelengkapnya matpoltlib
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import r2_score, mean_squared_error

import warnings
warnings.filterwarnings('ignore')

"""Kasus pertama di Indonesia dilaporkan pada 01 Maret 2020, tanggal ini akan kita jadikan sebagai hari ke-0 untuk memulai prediksi"""

df = pd.read_csv('/content/confirmed_acc.csv', parse_dates=['date']) #memanggil file csv yang diwadahi dalam variabel df
df = df.iloc[39:] #nampil jumlah kasus dari indeks no.39
df.reset_index(inplace=True)# reset indeks dari 39 menjadi indeks pertama
df['day'] = np.arange(df.shape[0]) #buat kolom baru 'days' digunakan untuk membuat array bilangan bulat
df = df[['date','day','cases']] #Memilih hanya kolom 'date', 'day', dan 'cases' dari DataFrame df dan menyimpan
df

plt.plot(df['day'],df['cases'],marker='o') #membuat sebuah plot garis menggunakan data dari DataFrame
plt.show()

#end azriel

"""## Build model polynomial

Model polynomial ini menggunakan polynomial 5 degree
"""

#start sani
x = np.array(df['day'])

poly = PolynomialFeatures(5, include_bias=False) ## polynomial with 5 degree
poly.fit(.rxeshape(-1,1))
day_poly = poly.transform(x.reshape(-1,1))

model = LinearRegression()
model.fit(day_poly, df['cases'])
case_pred = model.predict(day_poly)
case_pred

#end sani
r2 = r2_score(df['cases'],case_pred)
rmse = np.sqrt(mean_squared_error(df['cases'],case_pred))
print(r2)
print(rmse)

#start eka
plt.scatter(df['day'],df['cases'],marker='o')
plt.plot(df['day'],case_pred, 'y-')
plt.show()

"""### Prediksi sampai akhir bulan April 2020"""

#end eka
date_pred = pd.date_range('20200408', periods = 23)
day_pred = np.arange(38,38+23)
cases_pred = model.predict(poly.fit_transform(day_pred.reshape(-1,1))).round()

prediksi = pd.DataFrame({'date_pred': date_pred, 'day_pred': day_pred, 'cases_pred': cases_pred})
prediksi['real'] = np.NaN * 23
prediksi['real'][0:3] = [2956,3293,3512] ## evaluasi prediksi mulai 08 April
prediksi

sns.set()
plt.figure(figsize=(16,8))
# plt.subplot(121)
# plt.scatter(df['day'],df['cases'])
# plt.plot(df['day'],case_pred, 'r-')
# plt.title('Kasus COVID19 di Indonesia 01 Maret - 07 April 2020 ')
# plt.xlabel('Hari')
# plt.ylabel('Total Kasus')
# plt.subplot(122)
plt.scatter(df['day'],df['cases'])
plt.plot(prediksi['day_pred'],prediksi['cases_pred'], 'g-')
plt.title('Prediksi Kasus COVID19 di Indonesia s/d 30 April 2020 ')
plt.xlabel('Hari')
plt.ylabel('Total Kasus')
# plt.savefig('covid19.png') ### save image
plt.show()

"""Diperkirakan sampai akhir April 2020, kasus COVID19 di Indonesia bisa mencapai 25000 lebih kasus, tentu laju pertumbuhan kasus ini sangat dipengaruhi oleh kebijakan pemerintah dan seberapa disiplin kita untuk bersama sama menekan laju pertumbuhan covid19 ini, semoga kebijakan pemerintah dapat efektif menahan laju kasus covid19 dan laju pertumbuhan kasus covid19 bisa dibawah angka prediksi."""

